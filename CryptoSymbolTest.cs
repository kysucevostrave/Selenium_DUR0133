// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using SeleniumExtras.WaitHelpers;

namespace CryptoTests
{
    [TestFixture]
    public class CryptoSymbolTest
    {
        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        [SetUp]
        public void SetUp()
        {
            driver = new ChromeDriver();
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }
        [TearDown]
        protected void TearDown()
        {
            driver.Quit();
        }

        [Test]
        [TestCase("BTC")]
        [TestCase("btc")]
        [TestCase("DAI")]
        [TestCase("")]
        public void TestCryptoSymbolFound(string crSymbol)
        {
            driver.Navigate().GoToUrl("http://127.0.0.1:5500/index.html");
            driver.Manage().Window.Size = new System.Drawing.Size(1536, 816);
            driver.FindElement(By.Id("symbolInput")).SendKeys(crSymbol);
            WebDriverWait wait1 = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
            IWebElement cryptoElement = wait1.Until(ExpectedConditions.ElementIsVisible(By.CssSelector(".el:nth-child(1)")));
            cryptoElement.Click();
            try
            {
                WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
                IWebElement cenaElement = wait.Until(ExpectedConditions.ElementIsVisible(By.Id("cena")));
                string cryptoPrice = cenaElement.Text;
                Assert.Pass("The price of the crypto " + crSymbol + " is: " + cryptoPrice + " USD");
            }
            catch (NoSuchElementException e)
            {
                Assert.Fail("Crypto not found for symbol: " + crSymbol);
            }
        }


        [Test]
        [TestCase("123")]
        [TestCase("ABC")]
        [TestCase("BŤČ")]
        public void TestCryptoSymbolNotFound(string crSymbol)
        {
            driver.Navigate().GoToUrl("http://127.0.0.1:5500/index.html");
            driver.Manage().Window.Size = new System.Drawing.Size(1536, 816);
            driver.FindElement(By.Id("symbolInput")).SendKeys(crSymbol);

            try
            {
                driver.FindElement(By.CssSelector(".el"));
                Assert.Fail("Crypto unexpectedly found for symbol: " + crSymbol);
            }
            catch (NoSuchElementException e)
            {
                Assert.Pass("No crypto found for symbol: " + crSymbol);
            }
        }
    }
}