// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using SeleniumExtras.WaitHelpers;

namespace CryptoTests
{

    [TestFixture]
    public class CryptoDetailTest
    {
        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        [SetUp]
        public void SetUp()
        {
            driver = new ChromeDriver();
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }
        [TearDown]
        protected void TearDown()
        {
            driver.Quit();
        }
        
        [Test]
        [TestCase("10", "2022-02-22")]
        [TestCase("20", "2021-03-15")]
        [TestCase("30", "2000-01-01")]
        [TestCase("", "2020-20-20")]
        public void TestCryptoDetail(string daysCount, string startDate)
        {
            driver.Navigate().GoToUrl("http://127.0.0.1:5500/index.html");
            driver.Manage().Window.Size = new System.Drawing.Size(1536, 816);

            WebDriverWait wait1 = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
            IWebElement cryptoElement = wait1.Until(ExpectedConditions.ElementIsVisible(By.CssSelector(".el:nth-child(1)")));
            cryptoElement.Click();
            try
            {
                WebDriverWait wait2 = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
                IWebElement daysElement = wait2.Until(ExpectedConditions.ElementIsVisible(By.Id("daysCount")));
                WebDriverWait wait3 = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
                IWebElement startElement = wait3.Until(ExpectedConditions.ElementIsVisible(By.Id("startDate")));

                driver.FindElement(By.Id("daysCount")).Clear();
                driver.FindElement(By.Id("daysCount")).SendKeys(daysCount);
                driver.FindElement(By.Id("startDate")).SendKeys(startDate);

                Assert.Pass("Settings passed");
            }
            catch (NoSuchElementException e)
            {
                Assert.Fail("Crypto not found");
            }
        }
    }
}